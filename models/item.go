// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Item item
//
// swagger:model item
type Item struct {

	// long link
	// Min Length: 1
	LongLink string `json:"longLink,omitempty"`

	// short link
	// Min Length: 1
	ShortLink string `json:"shortLink,omitempty"`
}

// Validate validates this item
func (m *Item) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLongLink(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShortLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Item) validateLongLink(formats strfmt.Registry) error {
	if swag.IsZero(m.LongLink) { // not required
		return nil
	}

	if err := validate.MinLength("longLink", "body", m.LongLink, 1); err != nil {
		return err
	}

	return nil
}

func (m *Item) validateShortLink(formats strfmt.Registry) error {
	if swag.IsZero(m.ShortLink) { // not required
		return nil
	}

	if err := validate.MinLength("shortLink", "body", m.ShortLink, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this item based on context it is used
func (m *Item) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Item) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Item) UnmarshalBinary(b []byte) error {
	var res Item
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
